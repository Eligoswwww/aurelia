# handlers/user.py
from aiogram import types, Dispatcher
from aiogram.filters import Command, Text
from chatter.core import get_response, train_default, train_custom, reset_db

async def cmd_start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –æ–±—É—á–µ–Ω–Ω—ã–π –Ω–∞ ChatterBot. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!")

async def cmd_help(message: types.Message):
    await message.answer("üí¨ –ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –Ω–∞—á–∞—Ç—å\n/help ‚Äî –ø–æ–º–æ—â—å\n/train ‚Äî –æ–±—É—á–∏—Ç—å\n/reset ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É")

async def cmd_train(message: types.Message):
    train_default()
    await message.answer("üß† –ë–æ—Ç –æ–±—É—á–µ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ä—É—Å—Å–∫–æ–º—É –∫–æ—Ä–ø—É—Å—É!")

async def cmd_reset(message: types.Message):
    if reset_db():
        await message.answer("üóëÔ∏è –ë–∞–∑–∞ —Å–±—Ä–æ—à–µ–Ω–∞. –í—ã–ø–æ–ª–Ω–∏ /train –¥–ª—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è.")
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É.")

async def text_handler(message: types.Message):
    text = message.text.strip()
    if not text:
        return
    reply = get_response(text)
    await message.answer(reply)

async def read_chapter_1_handler(callback: types.CallbackQuery):
    await callback.message.answer("–¢–µ–∫—Å—Ç –ì–ª–∞–≤—ã 1...")
    await callback.answer()

async def full_access_handler(callback: types.CallbackQuery):
    await callback.message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.")
    await callback.answer()

async def subscribe_handler(callback: types.CallbackQuery):
    await callback.message.answer("–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.")
    await callback.answer()

async def read_full_book_handler(callback: types.CallbackQuery):
    await callback.message.answer("–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–Ω–∏–≥–µ! –í–æ—Ç –≤–µ—Å—å —Ç–µ–∫—Å—Ç...")
    await callback.answer()

def register_handlers(dp: Dispatcher):
    dp.message.register(cmd_start, Command(commands=["start"]))
    dp.message.register(cmd_help, Command(commands=["help"]))
    dp.message.register(cmd_train, Command(commands=["train"]))
    dp.message.register(cmd_reset, Command(commands=["reset"]))
    dp.message.register(text_handler)

def register_user_callbacks(dp: Dispatcher):
    dp.callback_query.register(read_chapter_1_handler, Text("read_chapter_1"))
    dp.callback_query.register(full_access_handler, Text("full_access"))
    dp.callback_query.register(subscribe_handler, Text("subscribe"))
    dp.callback_query.register(read_full_book_handler, Text("read_full_book"))
