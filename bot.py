import os
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import BotCommand
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web
from dotenv import load_dotenv

# üîê –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# üì¶ –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.getenv("PORT", "10000"))

# üö´ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if not TOKEN or not WEBHOOK_URL:
    raise ValueError("BOT_TOKEN –∏ WEBHOOK_URL –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ .env")

# üìã –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ñ–∏–ª—å—Ç—Ä–æ–º aiogram 3.x
@dp.message(F.text == "/start")
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–æ—Ç–æ–∫–æ–ª AURELIA.")

# üöÄ –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
async def on_startup(app: web.Application):
    await bot.set_webhook(WEBHOOK_URL)
    logger.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

# üì¥ –ü—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ ‚Äî —É–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
async def on_shutdown(app: web.Application):
    logger.info("–í—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞...")
    await bot.delete_webhook()
    await bot.session.close()

# üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –≤–µ—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
app = web.Application()
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)

# üåç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ webhook-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ /webhook
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path="/webhook")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if __name__ == "__main__":
    setup_application(app, dp, bot=bot)
    web.run_app(app, host="0.0.0.0", port=PORT)
